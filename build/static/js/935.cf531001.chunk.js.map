{"version":3,"file":"static/js/935.cf531001.chunk.js","mappings":"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","sources":["Component/PrankLink/Gallery.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport PrankBtn from './PrankBtn';\r\nimport watermark from \"../../img/watermark.png\";\r\nimport share from \"../../img/share.png\";\r\nimport Share from './Share';\r\nimport InterstitialAd from './displayads'; // Import the InterstitialAd component\r\n\r\nconst Gallery = ({ data2 }) => {\r\n    const [isImageLoaded, setIsImageLoaded] = useState(false);\r\n    const [isShareOpen, setIsShareOpen] = useState(false);\r\n    const [showCoverImage, setShowCoverImage] = useState(true);\r\n    const [showAd, setShowAd] = useState(false);\r\n\r\n    const onShareClick = () => {\r\n        setShowAd(true); // Show interstitial ad first\r\n    };\r\n\r\n    const handleAdComplete = () => {\r\n        setShowAd(false); // Hide the ad\r\n        setIsShareOpen(true); // Show the share component\r\n    };\r\n\r\n    const handleAdError = () => {\r\n        setShowAd(false); // Hide the ad if there's an error\r\n        setIsShareOpen(true); // Directly show the share component\r\n        setShowCoverImage(false); // Hide the cover image if ad fails\r\n    };\r\n\r\n    const handleCloseClick = () => {\r\n        setShowCoverImage(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (data2?.File) {\r\n            const img = new Image();\r\n            img.src = data2.File;\r\n            img.onload = () => setIsImageLoaded(true);\r\n        }\r\n\r\n        // Set a timeout to trigger the error handler in case the ad doesn't load in time\r\n        const adTimeout = setTimeout(() => {\r\n            if (showAd) {\r\n                handleAdError(); // Fallback to share if ad loading fails\r\n            }\r\n        }, 500); // 5 seconds timeout for ad\r\n\r\n        return () => clearTimeout(adTimeout); // Clean up timeout on component unmount\r\n    }, [data2?.File, showAd]);\r\n\r\n    return (\r\n        <div className=\"full-page-background\">\r\n            {/* Show the InterstitialAd when showAd is true */}\r\n            {showAd && <InterstitialAd onAdComplete={handleAdComplete} onAdError={handleAdError} />}\r\n\r\n            <div className=\"content-container\">\r\n                <Row className=\"content px-3 overflow-hidden flex-grow-1\">\r\n                    <Col className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                        <div className=\"img-div position-relative overflow-hidden rounded-4 d-flex align-items-center justify-content-center border border-white\">\r\n                            <div className=\"blurred-bg\" />\r\n\r\n                            {!isImageLoaded && (\r\n                                <div\r\n                                    className=\"loading-placeholder rounded-4\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        height: '100%',\r\n                                        background: 'rgba(0,0,0,0.5)',\r\n                                        display: 'flex',\r\n                                        justifyContent: 'center',\r\n                                        alignItems: 'center',\r\n                                    }}\r\n                                >\r\n                                    <div className=\"spinner-border text-light\" role=\"status\">\r\n                                        <span className=\"visually-hidden\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {isImageLoaded && (\r\n                                <>\r\n                                    <img\r\n                                        src={`http://localhost:5001/api/proxy?url=${encodeURIComponent(data2.File)}`}\r\n                                        alt=\"prankImage\"\r\n                                        className=\"img-fluid position-absolute\"\r\n                                    />\r\n\r\n                                    {showCoverImage && (\r\n                                        <div className=\"cover-image-overlay\">\r\n                                            <button\r\n                                                className=\"close-button\"\r\n                                                onClick={handleCloseClick}\r\n                                                aria-label=\"Close cover image\"\r\n                                            >\r\n                                                <FontAwesomeIcon icon={faTimes} />\r\n                                            </button>\r\n                                            <img\r\n                                                src={`http://localhost:5001/api/proxy?url=${encodeURIComponent(data2.CoverImage)}`}\r\n                                                alt=\"Cover\"\r\n                                                className=\"full-cover-image\"\r\n                                            />\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    <div>\r\n                                        <div\r\n                                            className=\"share-btn position-absolute text-black cursor\"\r\n                                            onClick={onShareClick}\r\n                                            role=\"button\"\r\n                                            aria-label=\"Share this content\"\r\n                                            tabIndex={0}\r\n                                            onKeyPress={(e) => e.key === 'Enter' && onShareClick()}\r\n                                            style={{ zIndex: 2 }}\r\n                                        >\r\n                                            <img src={share} alt=\"share\" width={18} style={{ paddingRight: \"2px\" }} />\r\n                                        </div>\r\n                                        <Share\r\n                                            show={isShareOpen}\r\n                                            onHide={() => setIsShareOpen(false)}\r\n                                            data2={data2}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div\r\n                                        className=\"position-absolute text-black\"\r\n                                        style={{\r\n                                            top: '-23px',\r\n                                            left: '-22px',\r\n                                            zIndex: 2,\r\n                                        }}\r\n                                    >\r\n                                        <img src={watermark} alt=\"Prankster\" width={120} />\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"mt-3\">\r\n                            <PrankBtn />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n\r\n            <style>{`\r\n                .full-page-background {\r\n                    position: relative;\r\n                    min-height: 100vh;\r\n                    width: 100%;\r\n                    display: flex;\r\n                    overflow: hidden;\r\n                    background-color: #1c1c1c;\r\n                }\r\n\r\n                .content-container {\r\n                    position: relative;\r\n                    z-index: 2;\r\n                    width: 100%;\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    min-height: 100vh;\r\n                }\r\n\r\n                .img-div {\r\n                    position: relative;\r\n                    background-color: transparent;\r\n                }\r\n\r\n                .blurred-bg {\r\n                    position: absolute;\r\n                    top: 0;\r\n                    left: 0;\r\n                    right: 0;\r\n                    bottom: 0;\r\n                    background-image: ${isImageLoaded && data2?.File ? `url('http://localhost:5001/api/proxy?url=${encodeURIComponent(data2.File)}')` : 'none'};\r\n                    background-size: cover;\r\n                    background-position: center;\r\n                    filter: blur(15px); \r\n                    backdrop-filter: blur(15px); \r\n                    -webkit-backdrop-filter: blur(15px); \r\n                    z-index: 0;\r\n                }\r\n\r\n                .img-fluid {\r\n                    position: relative;\r\n                    z-index: 1;\r\n                }\r\n\r\n                .content {\r\n                    color: white;\r\n                    text-align: center;\r\n                }\r\n            `}</style>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Gallery;"],"names":["_ref","data2","isImageLoaded","setIsImageLoaded","useState","isShareOpen","setIsShareOpen","showCoverImage","setShowCoverImage","showAd","setShowAd","onShareClick","handleAdError","useEffect","File","img","Image","src","onload","adTimeout","setTimeout","clearTimeout","_jsxs","className","children","_jsx","InterstitialAd","onAdComplete","handleAdComplete","onAdError","Row","Col","style","width","height","background","display","justifyContent","alignItems","role","_Fragment","encodeURIComponent","alt","onClick","handleCloseClick","FontAwesomeIcon","icon","faTimes","CoverImage","tabIndex","onKeyPress","e","key","zIndex","share","paddingRight","Share","show","onHide","top","left","watermark","PrankBtn"],"sourceRoot":""}