{"version":3,"file":"static/js/809.60201771.chunk.js","mappings":"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","sources":["Component/PrankLink/AudioVisualizer.js","Component/PrankLink/Audio.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst AudioVisualizer = ({ currentTime, totalDuration, className }) => {\r\n  const [totalBars, setTotalBars] = useState(36);\r\n  const [progress, setProgress] = useState(0);\r\n  const containerRef = useRef(null);\r\n  const animationFrameRef = useRef(null);\r\n\r\n  // Dynamically calculate bars based on container width\r\n  useEffect(() => {\r\n    const calculateBars = () => {\r\n      if (containerRef.current) {\r\n        const containerWidth = containerRef.current.offsetWidth;\r\n        const calculatedBars = Math.floor(containerWidth / 6);\r\n        const newTotalBars = Math.max(16, Math.min(calculatedBars, 64));\r\n        setTotalBars(newTotalBars);\r\n      }\r\n    };\r\n\r\n    calculateBars();\r\n    window.addEventListener('resize', calculateBars);\r\n    return () => window.removeEventListener('resize', calculateBars);\r\n  }, []);\r\n\r\n  // Smooth progress update\r\n  useEffect(() => {\r\n    const updateProgress = () => {\r\n      if (totalDuration) {\r\n        const targetProgress = (currentTime / totalDuration) * 100;\r\n\r\n        if (targetProgress >= 99.9) {\r\n          // Reset to start\r\n          setProgress(0);\r\n        } else {\r\n          // Smooth interpolation\r\n          setProgress((prevProgress) => {\r\n            const delta = (targetProgress - prevProgress) * 0.1; // Adjust smoothness\r\n            return Math.abs(delta) < 0.01 ? targetProgress : prevProgress + delta;\r\n          });\r\n        }\r\n\r\n        // Continue animation\r\n        animationFrameRef.current = requestAnimationFrame(updateProgress);\r\n      }\r\n    };\r\n\r\n    animationFrameRef.current = requestAnimationFrame(updateProgress);\r\n\r\n    return () => {\r\n      if (animationFrameRef.current) {\r\n        cancelAnimationFrame(animationFrameRef.current);\r\n      }\r\n    };\r\n  }, [currentTime, totalDuration]);\r\n\r\n  // Generate bars based on progress\r\n  const generateBars = () => {\r\n    const bars = [];\r\n    for (let i = 0; i < totalBars; i++) {\r\n      const isActive = (i / totalBars) * 100 <= progress;\r\n      const height = Math.floor(Math.random() * (25 - 2 + 1)) + 9;\r\n      bars.push(\r\n        <div\r\n          key={i}\r\n          className=\"d-inline-block rounded\"\r\n          style={{\r\n            width: '2px',\r\n            height: `${height}px`,\r\n            backgroundColor: isActive ? '#F9E238' : 'white',\r\n            margin: '0px 3px',\r\n            transition: 'all 0.2s ease-out', // Smooth bar transition\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return bars;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      className={`py-3 d-flex align-items-center justify-content-start ${className}`}\r\n      style={{\r\n        height: '50px',\r\n        overflow: 'hidden',\r\n      }}\r\n    >\r\n      <div className=\"d-flex align-items-center\">{generateBars()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioVisualizer;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport PrankBtn from './PrankBtn';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPause, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport watermark from \"../../img/watermark.png\";\r\nimport AudioVisualizer from './AudioVisualizer';\r\nimport Share from './Share';\r\nimport InterstitialAd from './displayads';\r\nimport share from \"../../img/share.png\";\r\nimport AdComponent from './AdSenseAd';\r\n\r\nconst Audio = ({ data2 }) => {\r\n    const audioRef = useRef(null);\r\n    const [currentTime, setCurrentTime] = useState('0:00');\r\n    const [totalTime, setTotalTime] = useState('0:00');\r\n    const [isImageLoaded, setIsImageLoaded] = useState(false);\r\n    const [duration, setDuration] = useState(0);\r\n    const [isShareOpen, setIsShareOpen] = useState(false);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const [showCoverImage, setShowCoverImage] = useState(true);\r\n    const [showAd, setShowAd] = useState(false);\r\n    const [currentImage, setCurrentImage] = useState(data2?.Image);\r\n    const handleAdError = () => {\r\n        setShowAd(false); // Hide the ad if there's an error\r\n        setIsShareOpen(true); // Directly show the share component\r\n    };\r\n\r\n\r\n    const formatTime = (seconds) => {\r\n        const minutes = Math.floor(seconds / 60);\r\n        const sec = Math.floor(seconds % 60);\r\n        return `${minutes}:${sec < 10 ? '0' : ''}${sec}`;\r\n    };\r\n\r\n    const startAudioWithSound = async () => {\r\n        if (audioRef.current) {\r\n            try {\r\n                audioRef.current.volume = 1;\r\n                audioRef.current.muted = false;\r\n                await audioRef.current.play();\r\n                setIsPlaying(true);\r\n                if (data2?.Image) {\r\n                    setCurrentImage(data2.Image);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error playing audio:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleCloseClick = () => {\r\n        setShowCoverImage(false);\r\n        startAudioWithSound();\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (data2?.Image) {\r\n            const img = new Image();\r\n            img.src = data2.Image;\r\n            img.onload = () => {\r\n                setIsImageLoaded(true);\r\n                setCurrentImage(data2.Image);\r\n            };\r\n        }\r\n\r\n        // Set a timeout to trigger the error handler in case the ad doesn't load in time\r\n        const adTimeout = setTimeout(() => {\r\n            if (showAd) {\r\n                handleAdError(); // Fallback to share if ad loading fails\r\n            }\r\n        }, 500); // 5 seconds timeout for ad\r\n\r\n        return () => clearTimeout(adTimeout); // Clean up timeout on component unmount\r\n    }, [data2?.Image, showAd]);\r\n\r\n    useEffect(() => {\r\n        const audio = audioRef.current;\r\n\r\n        const updateTime = () => {\r\n            const current = audio.currentTime;\r\n            const total = audio.duration;\r\n            setCurrentTime(formatTime(current));\r\n            setTotalTime(formatTime(total));\r\n            setDuration(total);\r\n        };\r\n\r\n        if (audio) {\r\n            audio.addEventListener('timeupdate', updateTime);\r\n            audio.addEventListener('loadedmetadata', updateTime);\r\n\r\n            return () => {\r\n                audio.removeEventListener('timeupdate', updateTime);\r\n                audio.removeEventListener('loadedmetadata', updateTime);\r\n            };\r\n        }\r\n    }, []);\r\n\r\n    const onShareClick = () => {\r\n        setShowAd(true);\r\n    };\r\n\r\n    const handleAdComplete = () => {\r\n        setShowAd(false);\r\n        setIsShareOpen(true);\r\n    };\r\n\r\n    const getCurrentBackgroundImage = () => {\r\n        if (!isImageLoaded) return 'none';\r\n        if (isPlaying && data2?.Image) {\r\n            return `url('${data2.Image}')`;\r\n        }\r\n        return `url('${data2.Image}')`;\r\n    };\r\n\r\n    return (\r\n        <div className=\"full-page-background\">\r\n            {showAd && <InterstitialAd onAdComplete={handleAdComplete} onAdError={handleAdError} />}\r\n            <div className=\"content-container\">\r\n                <Row className=\"content p-0 overflow-hidden flex-grow-1\">\r\n                    <Col className=\"d-flex flex-column align-items-center justify-content-center\">\r\n                        <div className=\"img-div mt-2 position-relative overflow-hidden rounded-4 d-flex align-items-center justify-content-center border border-white\">\r\n                            <div className=\"blurred-bg\"></div>\r\n                            <audio ref={audioRef} loop\r\n                                onEnded={() => setIsPlaying(false)}\r\n                            >\r\n                                <source src={data2.File} type=\"audio/mp3\" />\r\n                                Your browser does not support the audio tag.\r\n                            </audio>\r\n\r\n                            {!isImageLoaded && (\r\n                                <div className=\"rounded-4\" style={{\r\n                                    width: \"100%\",\r\n                                    height: \"100%\",\r\n                                    aspectRatio: \"16/9\",\r\n                                    background: 'rgba(0,0,0,0.5)',\r\n                                    display: 'flex',\r\n                                    justifyContent: 'center',\r\n                                    alignItems: 'center',\r\n                                    margin: '0 auto'\r\n                                }}>\r\n                                    <div className=\"spinner-border text-light\" role=\"status\">\r\n                                        <span className=\"visually-hidden\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {isImageLoaded && (\r\n                                <>\r\n                                    <img\r\n                                        src={currentImage}\r\n                                        alt='prankImage'\r\n                                        className='img-fluid w-100 position-absolute'\r\n                                    />\r\n\r\n                                    {showCoverImage && (\r\n                                        <div className=\"cover-image-overlay\">\r\n                                            <div\r\n                                                className=\"close-button position-absolute cursor\"\r\n                                                onClick={handleCloseClick}\r\n                                                role=\"button\"\r\n                                                aria-label=\"Close cover image\"\r\n                                                tabIndex={0}\r\n                                                onKeyPress={(e) => e.key === 'Enter' && handleCloseClick()}\r\n                                                style={{ zIndex: 2 }}\r\n                                            >\r\n                                                <FontAwesomeIcon icon={faTimes} />\r\n                                            </div>\r\n                                            <img\r\n                                                src={data2.CoverImage}\r\n                                                alt=\"Cover\"\r\n                                                className=\"full-cover-image\"\r\n                                            />\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    <div>\r\n                                        <div\r\n                                            className=\"share-btn position-absolute text-black cursor\"\r\n                                            onClick={onShareClick}\r\n                                            role=\"button\"\r\n                                            aria-label=\"Share this content\"\r\n                                            tabIndex={0}\r\n                                            onKeyPress={(e) => e.key === 'Enter' && onShareClick()}\r\n                                            style={{\r\n                                                right: \"12px\",\r\n                                                bottom: \"12px\",\r\n                                                zIndex: 3\r\n                                            }}\r\n                                        >\r\n                                            <img src={share} alt=\"share\" width={18} style={{ paddingRight: \"2px\" }} />\r\n                                        </div>\r\n                                        <Share\r\n                                            show={isShareOpen}\r\n                                            onHide={() => setIsShareOpen(false)}\r\n                                            data2={data2}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className='position-absolute text-black' style={{ left: \"-22px\", top: \"-23px\", zIndex: 3 }}>\r\n                                        <img src={watermark} alt='Prankster' width={110} />\r\n                                    </div>\r\n\r\n                                    <div className='position-absolute text-black cursor w-100 px-2'\r\n                                        style={{\r\n                                            backgroundColor: \"rgba(217, 217, 217, 0.4)\",\r\n                                            backdropFilter: \"blur(20px)\",\r\n                                            WebkitBackdropFilter: \"blur(20px)\",\r\n                                            left: \"0\",\r\n                                            bottom: \"0px\"\r\n                                        }}>\r\n                                        <p className='m-0 mx-auto w-100 pt-2 text-black justify-content-center gap-2' >\r\n                                            <span>{data2.Name}</span>\r\n                                        </p>\r\n\r\n                                        <div className='d-flex align-items-center gap-3 justify-content-center'>\r\n                                            {isPlaying && (\r\n                                                <div style={{ width: \"40px\" }}>\r\n                                                    <div className='pause-btn'>\r\n                                                        <FontAwesomeIcon icon={faPause} className='fs-5' style={{ paddingTop: \"10px\" }} />\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n                                            <AudioVisualizer\r\n                                                currentTime={audioRef.current?.currentTime || 0}\r\n                                                totalDuration={duration}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className='mt-3'>\r\n                            <PrankBtn />\r\n                        </div>\r\n\r\n                        <AdComponent />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n\r\n            <style>{`\r\n                .content-container {\r\n                    position: relative;\r\n                    z-index: 2;\r\n                    width: 100%;\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    min-height: 100vh;\r\n                }\r\n\r\n                .cover-image-overlay::before {\r\n                    content: \"\";\r\n                    position: absolute;\r\n                    top: -10%;\r\n                    left: -10%;\r\n                    right: -10%;\r\n                    bottom: -10%;\r\n                    background-image: ${data2?.CoverImage ? `url('${data2.CoverImage}')` : 'none'};\r\n                    background-size: cover;\r\n                    background-position: center;\r\n                    filter: blur(20px); /* Increase blur effect */\r\n                    opacity:0.6;\r\n                    transform: scale(1.1); /* Scale the image slightly to remove black shadow */\r\n                    z-index: -1;\r\n                }\r\n\r\n                .blurred-bg {\r\n                    position: absolute;\r\n                    top: 0;\r\n                    left: 0;\r\n                    right: 0;\r\n                    bottom: 0;\r\n                    background-image: ${getCurrentBackgroundImage()};\r\n                    background-size: cover;\r\n                    background-position: center;\r\n                    filter: blur(${isPlaying ? '12px' : '8px'});\r\n                    transition: filter 0.01s ease, background-image 0.01s ease;\r\n                    z-index: 0;\r\n                }\r\n\r\n                .content {\r\n                    color: white;\r\n                    text-align: center;\r\n                }\r\n            `}</style>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Audio;"],"names":["_ref","currentTime","totalDuration","className","totalBars","setTotalBars","useState","progress","setProgress","containerRef","useRef","animationFrameRef","useEffect","calculateBars","current","containerWidth","offsetWidth","calculatedBars","Math","floor","newTotalBars","max","min","window","addEventListener","removeEventListener","updateProgress","targetProgress","prevProgress","delta","abs","requestAnimationFrame","cancelAnimationFrame","_jsx","ref","style","height","overflow","children","generateBars","bars","i","isActive","random","push","width","backgroundColor","margin","transition","_audioRef$current","data2","audioRef","setCurrentTime","totalTime","setTotalTime","isImageLoaded","setIsImageLoaded","duration","setDuration","isShareOpen","setIsShareOpen","isPlaying","setIsPlaying","showCoverImage","setShowCoverImage","showAd","setShowAd","currentImage","setCurrentImage","Image","handleAdError","formatTime","seconds","minutes","sec","handleCloseClick","async","volume","muted","play","error","console","startAudioWithSound","img","src","onload","adTimeout","setTimeout","clearTimeout","audio","updateTime","total","onShareClick","_jsxs","InterstitialAd","onAdComplete","handleAdComplete","onAdError","Row","Col","loop","onEnded","File","type","aspectRatio","background","display","justifyContent","alignItems","role","_Fragment","alt","onClick","tabIndex","onKeyPress","e","key","zIndex","FontAwesomeIcon","icon","faTimes","CoverImage","right","bottom","share","paddingRight","Share","show","onHide","left","top","watermark","backdropFilter","WebkitBackdropFilter","Name","faPause","paddingTop","AudioVisualizer","PrankBtn","AdComponent"],"sourceRoot":""}