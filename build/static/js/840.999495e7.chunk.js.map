{"version":3,"file":"static/js/840.999495e7.chunk.js","mappings":"oo8BAQA,MAsBA,EAtBoBA,KAGZC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEC,OAAQ,SAAUC,UAC5BH,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACC,UAAU,6DAA4DF,UACvEG,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,EAAGJ,UAAU,qEAAoEF,SAAA,EAC7FH,EAAAA,EAAAA,KAACU,IAAM,CACHC,MAAM,EACNC,cAAeA,EACfX,MAAO,CAAEY,MAAO,QAASX,OAAQ,YACrCF,EAAAA,EAAAA,KAAA,KAAGK,UAAU,wBAAuBF,SAAC,oBACrCG,EAAAA,EAAAA,MAAA,KAAGD,UAAU,kBAAkBJ,MAAO,CAAEa,MAAO,WAAWX,SAAA,CAAC,qCACtBH,EAAAA,EAAAA,KAAA,SAAM,qCCZzDe,GAAQC,EAAAA,EAAAA,OAAK,IAAM,gEACnBC,GAAQD,EAAAA,EAAAA,OAAK,IAAM,gEACnBE,GAAUF,EAAAA,EAAAA,OAAK,IAAM,gEA0D3B,EAxDkBG,KAChB,MAAM,UAAEC,IAAcC,EAAAA,EAAAA,MACfC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,OAC5BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,GAEjCG,GAAWC,EAAAA,EAAAA,cAAYC,UAC3B,IACE,MAAMC,QAAYC,EAAAA,EAAMC,KAAK,2CAA4C,CAAEZ,cACvEU,EAAIG,MAAQH,EAAIG,KAAKA,KACvBV,EAASO,EAAIG,KAAKA,MAElBV,EAAS,KAEb,CAAE,MAAOW,GACPC,QAAQC,MAAMF,GACdG,EAAAA,GAAMD,MAAM,yBACZb,EAAS,KACX,CAAC,QACCG,GAAW,EACb,IACC,CAACN,IAQJ,IANAkB,EAAAA,EAAAA,YAAU,KACJlB,GACFO,GACF,GACC,CAACP,EAAWO,IAEXF,EACF,OAAOzB,EAAAA,EAAAA,KAAA,OAAKK,UAAU,UAASF,UAACH,EAAAA,EAAAA,KAACuC,EAAAA,EAAO,MAG1C,IAAKjB,EACH,OAAOtB,EAAAA,EAAAA,KAAA,OAAKK,UAAU,UAASF,UAACH,EAAAA,EAAAA,KAACD,EAAW,MAgB9C,OACEC,EAAAA,EAAAA,KAACwC,EAAAA,SAAQ,CAACC,UAAUzC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,UAASF,UAACH,EAAAA,EAAAA,KAACuC,EAAAA,EAAO,MAAUpC,SAd3CuC,MACpB,OAAQpB,EAAMqB,MACZ,IAAK,QACH,OAAO3C,EAAAA,EAAAA,KAACe,EAAK,CAACO,MAAOA,IACvB,IAAK,QACH,OAAOtB,EAAAA,EAAAA,KAACiB,EAAK,CAACK,MAAOA,IACvB,IAAK,UACH,OAAOtB,EAAAA,EAAAA,KAACkB,EAAO,CAACI,MAAOA,IACzB,QACE,OAAOtB,EAAAA,EAAAA,KAAA,OAAKK,UAAU,UAASF,SAAC,0BACpC,EAKGuC,IACQ,C","sources":["Component/NoDataFound.js","Pages/PrankLink.js"],"sourcesContent":["import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\n\r\n// lottie\r\nimport Lottie from \"lottie-react\";\r\nimport animationData from \"../assets/nodata.json\"\r\n\r\n\r\nconst NoDataFound = () => {\r\n\r\n    return (\r\n        <div style={{ height: \"100vh\" }}>\r\n            <Row className='d-flex justify-content-center align-items-center h-100 m-0'>\r\n                <Col sm={9} xl={5} className='h-100 d-flex flex-column justify-content-center align-items-center'>\r\n                    <Lottie\r\n                        loop={true}\r\n                        animationData={animationData}\r\n                        style={{ width: '300px', height: '300px' }} />\r\n                    <p className='fw-bold fs-5 m-0 pt-4'>No data found.</p>\r\n                    <p className='m-0 text-center' style={{ color: \"#AAAAAA\"}}>\r\n                        Request failed! Please try again <br />\r\n                        with a different link...\r\n                    </p>\r\n\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NoDataFound;\r\n","import React, { useState, useEffect, useCallback, lazy, Suspense } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport Loading from '../Component/Loading';\r\nimport NoDataFound from '../Component/NoDataFound';\r\n\r\n// Lazy load the components\r\nconst Audio = lazy(() => import('../Component/PrankLink/Audio'));\r\nconst Video = lazy(() => import('../Component/PrankLink/Video'));\r\nconst Gallery = lazy(() => import('../Component/PrankLink/Gallery'));\r\n\r\nconst PrankLink = () => {\r\n  const { prankName } = useParams();\r\n  const [data2, setData2] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const getData2 = useCallback(async () => {\r\n    try {\r\n      const res = await axios.post('https://pslink.world/api/prank/open-link', { prankName });\r\n      if (res.data && res.data.data) {\r\n        setData2(res.data.data);\r\n      } else {\r\n        setData2(null);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error(\"Failed to fetch data.\");\r\n      setData2(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [prankName]);\r\n\r\n  useEffect(() => {\r\n    if (prankName) {\r\n      getData2();\r\n    }\r\n  }, [prankName, getData2]);\r\n\r\n  if (loading) {\r\n    return <div className=\"content\"><Loading /></div>;\r\n  }\r\n\r\n  if (!data2) {\r\n    return <div className=\"content\"><NoDataFound /></div>;\r\n  }\r\n\r\n  const renderContent = () => {\r\n    switch (data2.Type) {\r\n      case 'audio':\r\n        return <Audio data2={data2} />;\r\n      case 'video':\r\n        return <Video data2={data2} />;\r\n      case 'gallery':\r\n        return <Gallery data2={data2} />;\r\n      default:\r\n        return <div className=\"content\">No content available.</div>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Suspense fallback={<div className=\"content\"><Loading /></div>}>\r\n      {renderContent()}\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default PrankLink;\r\n"],"names":["NoDataFound","_jsx","style","height","children","Row","className","_jsxs","Col","sm","xl","Lottie","loop","animationData","width","color","Audio","lazy","Video","Gallery","PrankLink","prankName","useParams","data2","setData2","useState","loading","setLoading","getData2","useCallback","async","res","axios","post","data","err","console","error","toast","useEffect","Loading","Suspense","fallback","renderContent","Type"],"sourceRoot":""}