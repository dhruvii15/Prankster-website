{"version":3,"file":"static/js/19.621ac80e.chunk.js","mappings":"yNAQA,MAsKA,EAtKgBA,IAAgB,IAAf,MAAEC,GAAOD,EACtB,MAAOE,EAAeC,IAAoBC,EAAAA,EAAAA,WAAS,IAC5CC,EAAaC,IAAkBF,EAAAA,EAAAA,WAAS,IACxCG,EAAQC,IAAaJ,EAAAA,EAAAA,WAAS,GAE/BK,EAAeA,KACjBD,GAAU,EAAK,EAgBnB,OARAE,EAAAA,EAAAA,YAAU,KACN,GAAS,OAALT,QAAK,IAALA,GAAAA,EAAOU,KAAM,CACb,MAAMC,EAAM,IAAIC,MAChBD,EAAIE,IAAMb,EAAMU,KAChBC,EAAIG,OAAS,IAAMZ,GAAiB,EACxC,IACD,CAAM,OAALF,QAAK,IAALA,OAAK,EAALA,EAAOU,QAGPK,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,CAEhCX,IAAUY,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CAACC,aAhBVC,KACrBd,GAAU,GACVF,GAAe,EAAK,KAgBhBU,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAC9BC,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACN,UAAU,2CAA0CC,UACrDF,EAAAA,EAAAA,MAACQ,EAAAA,EAAG,CAACP,UAAU,+DAA8DC,SAAA,EACzEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2HAA0HC,SAAA,EACrIC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAEfE,EAAAA,EAAAA,KAAA,OACIL,IAAKb,EAAMU,KACXc,IAAI,aACJR,UAAU,8BACVS,MAAO,CAAEC,QAASzB,EAAgB,QAAU,WAI9CA,IACEiB,EAAAA,EAAAA,KAAA,OACIF,UAAU,gCACVS,MAAO,CACHE,MAAO,OACPC,OAAQ,OACRC,WAAY,kBACZH,QAAS,OACTI,eAAgB,SAChBC,WAAY,UACdd,UAEFC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4BAA4BgB,KAAK,SAAQf,UACpDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,kBAAiBC,SAAC,mBAK7ChB,IACGc,EAAAA,EAAAA,MAAAkB,EAAAA,SAAA,CAAAhB,SAAA,EACIF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,OACIF,UAAU,gDACVkB,QAAS1B,EACTwB,KAAK,SACL,aAAW,qBACXG,SAAU,EACVC,WAAaC,GAAgB,UAAVA,EAAEC,KAAmB9B,IACxCiB,MAAO,CAAEc,OAAQ,GAAItB,UAErBC,EAAAA,EAAAA,KAAA,OAAKL,IAAK2B,EAAOhB,IAAI,QAAQG,MAAO,GAAIF,MAAO,CAAEgB,aAAc,YAEnEvB,EAAAA,EAAAA,KAACwB,EAAAA,EAAK,CACFC,KAAMvC,EACNwC,OAAQA,IAAMvC,GAAe,GAC7BL,MAAOA,QAIfkB,EAAAA,EAAAA,KAAA,OACIF,UAAU,+BACVS,MAAO,CACHoB,IAAK,QACLC,KAAM,QACNP,OAAQ,GACVtB,UAEFC,EAAAA,EAAAA,KAAA,OAAKL,IAAKkC,EAAWvB,IAAI,YAAYG,MAAO,eAM5DT,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACjBC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAQ,YAMrB9B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,0CAWnBE,EAAAA,EAAAA,KAAA,SAAAD,SAAQ,u8BA8BoBhB,GAAsB,OAALD,QAAK,IAALA,GAAAA,EAAOU,KAAO,QAAQV,EAAMU,SAAW,qmBAoBlF,C,8BCjKd,IAAIuC,EAAuBC,EAAQ,MAEnC,SAASC,IAAiB,CAC1B,SAASC,IAA0B,CACnCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWb,EAAf,CAIA,IAAIc,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIE,KAAO,sBACLF,CAPN,CAQF,CAEA,SAASG,IACP,OAAOV,CACT,CAHAA,EAAKW,WAAaX,EAMlB,IAAIY,EAAiB,CACnBC,MAAOb,EACPc,OAAQd,EACRe,KAAMf,EACNgB,KAAMhB,EACNiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EACRoB,OAAQpB,EAERqB,IAAKrB,EACLsB,QAASZ,EACTa,QAASvB,EACTwB,YAAaxB,EACbyB,WAAYf,EACZgB,KAAM1B,EACN2B,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBpC,EAChBC,kBAAmBF,GAKrB,OAFAiB,EAAeqB,UAAYrB,EAEpBA,CACT,C,iBC/CEd,EAAOC,QAAUL,EAAQ,KAARA,E,wBCNnBI,EAAOC,QAFoB,8C","sources":["Component/PrankLink/Gallery.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport PrankBtn from './PrankBtn';\r\nimport watermark from \"../../img/watermark.png\";\r\nimport share from \"../../img/share.png\";\r\nimport Share from './Share';\r\nimport InterstitialAd from './InterstitialAd'; // Import the InterstitialAd component\r\n\r\nconst Gallery = ({ data2 }) => {\r\n    const [isImageLoaded, setIsImageLoaded] = useState(false);\r\n    const [isShareOpen, setIsShareOpen] = useState(false);\r\n    const [showAd, setShowAd] = useState(false);\r\n\r\n    const onShareClick = () => {\r\n        setShowAd(true); // Show interstitial ad first\r\n    };\r\n\r\n    const handleAdComplete = () => {\r\n        setShowAd(false); // Hide the ad\r\n        setIsShareOpen(true); // Show the share component\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (data2?.File) {\r\n            const img = new Image();\r\n            img.src = data2.File;\r\n            img.onload = () => setIsImageLoaded(true);\r\n        }\r\n    }, [data2?.File]);\r\n\r\n    return (\r\n        <div className=\"full-page-background\">\r\n            {/* Show the InterstitialAd when showAd is true */}\r\n            {showAd && <InterstitialAd onAdComplete={handleAdComplete} />}\r\n\r\n            <div className=\"content-container\">\r\n                <Row className=\"content px-3 overflow-hidden flex-grow-1\">\r\n                    <Col className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                        <div className=\"img-div position-relative overflow-hidden rounded-4 d-flex align-items-center justify-content-center border border-white\">\r\n                            <div className=\"blurred-bg\" />\r\n\r\n                            <img\r\n                                src={data2.File}\r\n                                alt=\"prankImage\"\r\n                                className=\"img-fluid position-absolute\"\r\n                                style={{ display: isImageLoaded ? 'block' : 'none' }}\r\n                            />\r\n\r\n                            {/* Loading Placeholder */}\r\n                            {!isImageLoaded && (\r\n                                <div\r\n                                    className=\"loading-placeholder rounded-4\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        height: '100%',\r\n                                        background: 'rgba(0,0,0,0.5)',\r\n                                        display: 'flex',\r\n                                        justifyContent: 'center',\r\n                                        alignItems: 'center',\r\n                                    }}\r\n                                >\r\n                                    <div className=\"spinner-border text-light\" role=\"status\">\r\n                                        <span className=\"visually-hidden\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {isImageLoaded && (\r\n                                <>\r\n                                    <div>\r\n                                        <div\r\n                                            className=\"share-btn position-absolute text-black cursor\"\r\n                                            onClick={onShareClick}\r\n                                            role=\"button\"\r\n                                            aria-label=\"Share this content\"\r\n                                            tabIndex={0}\r\n                                            onKeyPress={(e) => e.key === 'Enter' && onShareClick()}\r\n                                            style={{ zIndex: 2 }}\r\n                                        >\r\n                                            <img src={share} alt=\"share\" width={18} style={{ paddingRight: \"2px\" }} />\r\n                                        </div>\r\n                                        <Share\r\n                                            show={isShareOpen}\r\n                                            onHide={() => setIsShareOpen(false)}\r\n                                            data2={data2}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div\r\n                                        className=\"position-absolute text-black\"\r\n                                        style={{\r\n                                            top: '-23px',\r\n                                            left: '-22px',\r\n                                            zIndex: 2,\r\n                                        }}\r\n                                    >\r\n                                        <img src={watermark} alt=\"Prankster\" width={110} />\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"mt-3\">\r\n                            <PrankBtn />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/* Advertisement div */}\r\n                <div className='ad-container py-2 ads-div mx-auto'>\r\n                    {/* <ins className=\"adsbygoogle border\"\r\n                        style={{ display: 'block', height: '50px', width: '99%' }}\r\n                        data-ad-format=\"rectangle\"\r\n                        data-ad-layout-key=\"-6t+ed+2i-1n-4w\" //optional\r\n                        data-ad-client=\"ca-pub-YOUR_PUBLISHER_ID\"\r\n                        data-ad-slot=\"YOUR_AD_SLOT_ID\">\r\n                    </ins> */}\r\n                </div>\r\n            </div>\r\n\r\n            <style>{`\r\n                .full-page-background {\r\n                    position: relative;\r\n                    min-height: 100vh;\r\n                    width: 100%;\r\n                    display: flex;\r\n                    overflow: hidden;\r\n                    background-color: #1c1c1c;\r\n                }\r\n\r\n                .content-container {\r\n                    position: relative;\r\n                    z-index: 2;\r\n                    width: 100%;\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    min-height: 100vh;\r\n                }\r\n\r\n                .img-div {\r\n                    position: relative;\r\n                    background-color: transparent;\r\n                }\r\n\r\n                .blurred-bg {\r\n                    position: absolute;\r\n                    top: 0;\r\n                    left: 0;\r\n                    right: 0;\r\n                    bottom: 0;\r\n                    background-image: ${isImageLoaded && data2?.File ? `url('${data2.File}')` : 'none'};\r\n                    background-size: cover;\r\n                    background-position: center;\r\n                    filter: blur(15px); \r\n                    backdrop-filter: blur(15px); \r\n                    -webkit-backdrop-filter: blur(15px); \r\n                    z-index: 0;\r\n                }\r\n\r\n                .img-fluid {\r\n                    position: relative;\r\n                    z-index: 1;\r\n                }\r\n\r\n                .content {\r\n                    color: white;\r\n                    padding: 20px;\r\n                    text-align: center;\r\n                }\r\n            `}</style>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Gallery;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["_ref","data2","isImageLoaded","setIsImageLoaded","useState","isShareOpen","setIsShareOpen","showAd","setShowAd","onShareClick","useEffect","File","img","Image","src","onload","_jsxs","className","children","_jsx","InterstitialAd","onAdComplete","handleAdComplete","Row","Col","alt","style","display","width","height","background","justifyContent","alignItems","role","_Fragment","onClick","tabIndex","onKeyPress","e","key","zIndex","share","paddingRight","Share","show","onHide","top","left","watermark","PrankBtn","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"sourceRoot":""}