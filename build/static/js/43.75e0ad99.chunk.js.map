{"version":3,"file":"static/js/43.75e0ad99.chunk.js","mappings":"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","sources":["Component/PrankLink/PrankBtn.js","Component/PrankLink/Share.js","Component/PrankLink/displayads.js"],"sourcesContent":["import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n// img\r\nimport pranklogo from \"../../img/pranklogo.png\";\r\n\r\nconst PrankBtn = () => {\r\n  const playStoreUrl = \"https://play.google.com/store/apps/details?id=com.prank.android\";\r\n  const appStoreUrl = \"https://apps.apple.com/us/app/prankster-digital-funny-pranks/id6739135275\"; \r\n\r\n  const isAndroid = /Android/i.test(navigator.userAgent);\r\n  const isiOS = /iPhone|iPad|iPod/i.test(navigator.userAgent);\r\n\r\n  const handlePrankButtonClick = () => {\r\n    if (isAndroid) {\r\n      window.open(playStoreUrl, '_blank');\r\n    } else if (isiOS) {\r\n      window.open(appStoreUrl, '_blank');\r\n    } else {\r\n      window.open(playStoreUrl, '_blank');\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className='d-flex flex-column align-items-center justify-content-center'>\r\n      <Button\r\n        className='mt-3 border-0 py-2 fs-5 text-black overflow-hidden'\r\n        style={{ backgroundColor: \"#F9E238\", width: \"130%\", fontWeight: \"600\", height: \"50px\" }}\r\n        onClick={handlePrankButtonClick}\r\n      >\r\n        <p className='btnlol'>Make your own pranks ðŸ˜€</p>\r\n        <p className='btntext pt-4' style={{ fontWeight: \"450\" }}>Download</p>\r\n        <img src={pranklogo} alt='lol' className='btnimg' width={130} />\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrankBtn;\r\n","import React, { useState } from \"react\";\r\nimport { Col, Offcanvas, Row, Toast, ToastBody } from \"react-bootstrap\";\r\n\r\n// Import share icons\r\nimport copyIcon from \"../../img/share1.png\";\r\nimport moreIcon from \"../../img/share6.png\";\r\n\r\nconst Share = ({ show, onHide, data2 }) => {\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [popupMessage, setPopupMessage] = useState(\"\");\r\n\r\n    const showMessage = (message) => {\r\n        setPopupMessage(message);\r\n        setShowPopup(true);\r\n        setTimeout(() => setShowPopup(false), 2000);\r\n    };\r\n\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText(data2?.ShareURL);\r\n        showMessage(\"Link copied to clipboard!\");\r\n    };\r\n\r\n    const handleShare = () => {\r\n        if (navigator.share) {\r\n            onHide(); // Close the Offcanvas before opening share dialog\r\n            navigator\r\n                .share({\r\n                    title: data2?.Name,\r\n                    text: `${data2?.Name}\\n\\n${data2?.ShareURL}`,\r\n                })\r\n                .then(() => {\r\n                    console.log(\"Shared successfully!\");\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Error sharing content:\", error);\r\n                    // Optionally show error message to user\r\n                });\r\n        }\r\n    };\r\n\r\n    const getShareOptions = () => {\r\n        if (navigator.share) {\r\n            return [{\r\n                name: \"Copy Link\",\r\n                icon: copyIcon,\r\n                onClick: handleCopy,\r\n                bgColor: \"#f3f4f6\"\r\n            }, {\r\n                name: \"Share\",\r\n                icon: moreIcon,\r\n                onClick: handleShare,\r\n                bgColor: \"#f3f4f6\"\r\n            }];\r\n        }\r\n\r\n        return [{\r\n            name: \"Copy Link\",\r\n            icon: copyIcon,\r\n            onClick: handleCopy,\r\n            bgColor: \"#f3f4f6\"\r\n        }];\r\n    };\r\n\r\n    const shareOptions = getShareOptions();\r\n\r\n    return (\r\n        <>\r\n            <Offcanvas\r\n                show={show}\r\n                onHide={onHide}\r\n                placement=\"bottom\"\r\n                style={{\r\n                    height: \"180px\",\r\n                    borderTopLeftRadius: \"16px\",\r\n                    borderTopRightRadius: \"16px\",\r\n                }}\r\n            >\r\n                <div className=\"p-3 img-div mx-auto\">\r\n                    <div className=\"d-flex justify-content-center mb-2\">\r\n                        <div\r\n                            style={{\r\n                                width: \"48px\",\r\n                                height: \"4px\",\r\n                                backgroundColor: \"#e5e7eb\",\r\n                                borderRadius: \"9999px\",\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n                    <Row className=\"pt-4\">\r\n                        {shareOptions.map((option) => (\r\n                            <Col xs={3} className=\"py-2\" key={option.name}>\r\n                                <button\r\n                                    onClick={option.onClick}\r\n                                    className=\"d-flex flex-column align-items-center border-0 bg-transparent\"\r\n                                >\r\n                                    <div\r\n                                        className=\"d-flex align-items-center justify-content-center rounded-circle mb-2\"\r\n                                        style={{\r\n                                            width: \"42px\",\r\n                                            height: \"42px\",\r\n                                            backgroundColor: option.bgColor,\r\n                                        }}\r\n                                    >\r\n                                        <img\r\n                                            src={option.icon}\r\n                                            alt={option.name}\r\n                                            style={{ width: \"100%\", height: \"100%\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <span\r\n                                        className=\"text-secondary fw-lighter\"\r\n                                        style={{ fontSize: \"12px\" }}\r\n                                    >\r\n                                        {option.name}\r\n                                    </span>\r\n                                </button>\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                </div>\r\n\r\n                <Toast\r\n                    show={showPopup}\r\n                    onClose={() => setShowPopup(false)}\r\n                    delay={2000}\r\n                    autohide\r\n                    style={{\r\n                        position: \"fixed\",\r\n                        bottom: \"10px\",\r\n                        left: \"50%\",\r\n                        transform: \"translateX(-50%)\",\r\n                        backgroundColor: \"#fff\",\r\n                        padding: \"3px\",\r\n                        borderRadius: \"5px\",\r\n                        zIndex: \"1000\",\r\n                    }}\r\n                >\r\n                    <ToastBody>{popupMessage}</ToastBody>\r\n                </Toast>\r\n            </Offcanvas>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Share;","import { useEffect, useState } from \"react\";\r\n\r\nconst InterstitialAd = ({ onAdComplete, onAdError, onAdClose }) => {\r\n  const [adClosed, setAdClosed] = useState(false);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      // This will push the ad to the adsbygoogle array, ensuring it loads\r\n      (window.adsbygoogle = window.adsbygoogle || []).push({});\r\n      \r\n      // Simulating successful ad load completion (you would replace this with actual logic)\r\n      setTimeout(() => {\r\n        if (onAdComplete) onAdComplete(); // Trigger onAdComplete after the ad is shown\r\n      }, 3000); // assuming the ad takes 3 seconds to complete\r\n    } catch (e) {\r\n      console.error(\"Adsense error\", e);\r\n      if (onAdError) onAdError(); // If there is an error loading the ad, trigger onAdError\r\n    }\r\n  }, [onAdComplete, onAdError]);\r\n\r\n  // Function to handle ad close (just for UI simulation)\r\n  const handleCloseAd = () => {\r\n    setAdClosed(true);  // Simulate closing by changing state\r\n    if (onAdClose) onAdClose();  // Trigger onAdClose callback when ad is manually closed\r\n  };\r\n\r\n  if (adClosed) {\r\n    return null;  // Remove the ad UI from the DOM after closing\r\n  }\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <ins\r\n        className=\"adsbygoogle\"\r\n        style={{ display: \"block\" }}\r\n        data-ad-client=\"ca-pub-7719542074975419\"\r\n        data-ad-slot=\"3943700191\"\r\n        data-ad-format=\"auto\"\r\n        data-full-width-responsive=\"true\"\r\n      ></ins>\r\n      {/* Manually Added Close Button */}\r\n      <button\r\n        style={{\r\n          position: \"absolute\", // Positioned on top of the ad\r\n          top: \"10px\",\r\n          right: \"10px\",\r\n          background: \"rgba(0, 0, 0, 0.6)\",\r\n          color: \"#fff\",\r\n          border: \"none\",\r\n          padding: \"5px 10px\",\r\n          cursor: \"pointer\",\r\n        }}\r\n        onClick={handleCloseAd}\r\n      >\r\n        Close\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InterstitialAd;\r\n"],"names":["PrankBtn","playStoreUrl","isAndroid","test","navigator","userAgent","isiOS","_jsx","className","children","_jsxs","Button","style","backgroundColor","width","fontWeight","height","onClick","handlePrankButtonClick","window","open","src","pranklogo","alt","_ref","show","onHide","data2","showPopup","setShowPopup","useState","popupMessage","setPopupMessage","handleCopy","clipboard","writeText","ShareURL","setTimeout","handleShare","share","title","Name","text","then","console","log","catch","error","shareOptions","name","icon","copyIcon","bgColor","_Fragment","Offcanvas","placement","borderTopLeftRadius","borderTopRightRadius","borderRadius","Row","map","option","Col","xs","fontSize","Toast","onClose","delay","autohide","position","bottom","left","transform","padding","zIndex","ToastBody","onAdComplete","onAdError","onAdClose","adClosed","setAdClosed","useEffect","adsbygoogle","push","e","display","top","right","background","color","border","cursor","handleCloseAd"],"sourceRoot":""}