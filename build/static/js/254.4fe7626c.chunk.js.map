{"version":3,"file":"static/js/254.4fe7626c.chunk.js","mappings":"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","sources":["Component/PrankLink/PrankBtn.js","img/telegram.svg","Component/PrankLink/Share.js","Component/PrankLink/displayads.js"],"sourcesContent":["import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n// img\r\nimport pranklogo from \"../../img/pranklogo.png\";\r\n\r\nconst PrankBtn = () => {\r\n  const playStoreUrl = \"https://play.google.com/store/apps/details?id=com.prank.android\";\r\n  const appStoreUrl = \"https://apps.apple.com/us/app/prankster-digital-funny-pranks/id6739135275\"; \r\n\r\n  const isAndroid = /Android/i.test(navigator.userAgent);\r\n  const isiOS = /iPhone|iPad|iPod/i.test(navigator.userAgent);\r\n\r\n  const handlePrankButtonClick = () => {\r\n    if (isAndroid) {\r\n      window.open(playStoreUrl, '_blank');\r\n    } else if (isiOS) {\r\n      window.open(appStoreUrl, '_blank');\r\n    } else {\r\n      window.open(playStoreUrl, '_blank');\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className='d-flex flex-column align-items-center justify-content-center'>\r\n      <Button\r\n        className='mt-3 border-0 py-2 fs-5 text-black overflow-hidden'\r\n        style={{ backgroundColor: \"#F9E238\", width: \"130%\", fontWeight: \"600\", height: \"50px\" }}\r\n        onClick={handlePrankButtonClick}\r\n      >\r\n        <p className='btnlol'>Make your own pranks ðŸ˜€</p>\r\n        <p className='btntext pt-4' style={{ fontWeight: \"450\" }}>Download</p>\r\n        <img src={pranklogo} alt='lol' className='btnimg' width={130} />\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrankBtn;\r\n","var _path, _path2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgTelegram(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 43,\n    height: 43,\n    viewBox: \"0 0 43 43\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M21.0791 0.69165C5.57572 0.69165 0.0791016 6.18827 0.0791016 21.6917C0.0791016 37.195 5.57572 42.6917 21.0791 42.6917C36.5825 42.6917 42.0791 37.195 42.0791 21.6917C42.0791 6.18827 36.5825 0.69165 21.0791 0.69165Z\",\n    fill: \"#26A5E4\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M8.87293 20.3846C14.9642 17.7308 19.026 15.9812 21.0583 15.1359C26.861 12.7223 28.0668 12.3031 28.8527 12.2892C29.0255 12.2862 29.412 12.329 29.6624 12.5321C29.8737 12.7037 29.9319 12.9354 29.9597 13.098C29.9876 13.2606 30.0222 13.6311 29.9947 13.9206C29.6802 17.2245 28.3196 25.2424 27.6274 28.9428C27.3345 30.5087 26.7578 31.0337 26.1994 31.085C24.986 31.1967 24.0646 30.2831 22.8894 29.5128C21.0504 28.3073 20.0114 27.5568 18.2264 26.3805C16.1634 25.021 17.5007 24.2739 18.6764 23.0527C18.9841 22.7332 24.3304 17.8703 24.4338 17.4292C24.4468 17.374 24.4588 17.1684 24.3366 17.0598C24.2144 16.9512 24.0341 16.9883 23.904 17.0179C23.7195 17.0597 20.7817 19.0015 15.0904 22.8433C14.2565 23.4159 13.5012 23.6949 12.8245 23.6803C12.0784 23.6642 10.6433 23.2584 9.57647 22.9117C8.26793 22.4863 7.22792 22.2614 7.31849 21.539C7.36566 21.1628 7.8838 20.778 8.87293 20.3846Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTelegram);\nexport default __webpack_public_path__ + \"static/media/telegram.dd7362716ba60cf4628c20ff4ec9cc78.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\r\nimport { Col, Offcanvas, Row, Toast, ToastBody } from \"react-bootstrap\";\r\nimport { RWebShare } from \"react-web-share\";\r\n\r\n// Import share icons\r\nimport copyIcon from \"../../img/share1.png\";\r\nimport moreIcon from \"../../img/share6.png\";\r\nimport whatsappIcon from \"../../img/whatsapp.png\";\r\nimport telegramIcon from \"../../img/telegram.svg\";\r\n\r\nconst Share = ({ show, onHide, data2 }) => {\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [popupMessage, setPopupMessage] = useState(\"\");\r\n\r\n    const showMessage = (message) => {\r\n        setPopupMessage(message);\r\n        setShowPopup(true);\r\n        setTimeout(() => setShowPopup(false), 2000);\r\n    };\r\n\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText(data2?.ShareURL);\r\n        showMessage(\"Link copied to clipboard!\");\r\n    };\r\n\r\n    const whatsapp = () => {\r\n        const text = encodeURIComponent(\r\n            `${data2.Name}\\n\\nðŸ‘‡ Tap on link ðŸ‘‡ : \\n${data2.ShareURL}`\r\n        );\r\n        const whatsappURL = `whatsapp://send?text=${text}`;\r\n        const opened = window.open(whatsappURL, \"_blank\");\r\n        if (!opened) {\r\n            alert(\"Please install WhatsApp to share.\");\r\n        }\r\n    };\r\n\r\n    const telegram = () => {\r\n        const text = encodeURIComponent(\r\n            `${data2.Name}\\n\\nðŸ‘‡ Tap on link ðŸ‘‡ : \\n${data2.ShareURL}`\r\n        );\r\n        const telegramURL = `tg://msg?text=${text}`;\r\n        const opened = window.open(telegramURL, \"_blank\");\r\n        if (!opened) {\r\n            alert(\"Please install Telegram to share.\");\r\n        }\r\n    };\r\n\r\n    const handleShare = () => {\r\n        if (navigator.share) {\r\n            navigator\r\n                .share({\r\n                    title: data2?.Name,\r\n                    text: `${data2?.Name}\\n\\n${data2?.ShareURL}`,\r\n                })\r\n                .then(() => {\r\n                    console.log(\"Shared successfully!\");\r\n                    onHide();\r\n                })\r\n                .catch((error) => console.error(\"Error sharing content:\", error));\r\n        }\r\n    };\r\n\r\n    const getShareOptions = () => {\r\n        const options = [{\r\n            name: \"Copy Link\",\r\n            icon: copyIcon,\r\n            onClick: handleCopy,\r\n            bgColor: \"#f3f4f6\",\r\n        }];\r\n\r\n        // Add WhatsApp and Telegram options when Web Share API is not available\r\n        if (!navigator.share) {\r\n            options.push(\r\n                {\r\n                    name: \"WhatsApp\",\r\n                    icon: whatsappIcon, // Replace with whatsappIcon when available\r\n                    onClick: whatsapp,\r\n                    bgColor: \"#f3f4f6\",\r\n                },\r\n                {\r\n                    name: \"Telegram\",\r\n                    icon: telegramIcon, // Replace with telegramIcon when available\r\n                    onClick: telegram,\r\n                    bgColor: \"#f3f4f6\",\r\n                }\r\n            );\r\n        }\r\n\r\n        // Add More button with conditional sharing\r\n        options.push({\r\n            name: \"More\",\r\n            icon: moreIcon,\r\n            onClick: handleShare,\r\n            bgColor: \"#f3f4f6\",\r\n            useRWebShare: !navigator.share\r\n        });\r\n\r\n        return options;\r\n    };\r\n\r\n    const shareOptions = getShareOptions();\r\n\r\n    return (\r\n        <>\r\n            <Offcanvas\r\n                show={show}\r\n                onHide={onHide}\r\n                placement=\"bottom\"\r\n                style={{\r\n                    height: \"180px\",\r\n                    borderTopLeftRadius: \"16px\",\r\n                    borderTopRightRadius: \"16px\",\r\n                }}\r\n            >\r\n                <div className=\"p-3 img-div mx-auto\">\r\n                    <div className=\"d-flex justify-content-center mb-2\">\r\n                        <div\r\n                            style={{\r\n                                width: \"48px\",\r\n                                height: \"4px\",\r\n                                backgroundColor: \"#e5e7eb\",\r\n                                borderRadius: \"9999px\",\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n                    <Row className=\"pt-4\">\r\n                        {shareOptions.map((option) => (\r\n                            <Col xs={3} className=\"py-2\" key={option.name}>\r\n                                {option.useRWebShare ? (\r\n                                    <RWebShare\r\n                                        data={{\r\n                                            text: data2?.Name,\r\n                                            url: data2?.ShareURL,\r\n                                        }}\r\n                                        onClick={() => {\r\n                                            console.log(\"shared successfully!!!!!!!!!!!!!!\");\r\n                                            onHide();\r\n                                        }}\r\n                                    >\r\n                                        <button\r\n                                            className=\"d-flex flex-column align-items-center border-0 bg-transparent\"\r\n                                        >\r\n                                            <div\r\n                                                className=\"d-flex align-items-center justify-content-center rounded-circle mb-2\"\r\n                                                style={{\r\n                                                    width: \"42px\",\r\n                                                    height: \"42px\",\r\n                                                    backgroundColor: option.bgColor,\r\n                                                }}\r\n                                            >\r\n                                                <img\r\n                                                    src={option.icon}\r\n                                                    alt={option.name}\r\n                                                    style={{ width: \"100%\", height: \"100%\" }}\r\n                                                />\r\n                                            </div>\r\n                                            <span\r\n                                                className=\"text-secondary fw-lighter\"\r\n                                                style={{ fontSize: \"12px\" }}\r\n                                            >\r\n                                                {option.name}\r\n                                            </span>\r\n                                        </button>\r\n                                    </RWebShare>\r\n                                ) : (\r\n                                    <button\r\n                                        onClick={option.onClick}\r\n                                        className=\"d-flex flex-column align-items-center border-0 bg-transparent\"\r\n                                    >\r\n                                        <div\r\n                                            className=\"d-flex align-items-center justify-content-center rounded-circle mb-2\"\r\n                                            style={{\r\n                                                width: \"42px\",\r\n                                                height: \"42px\",\r\n                                                backgroundColor: option.bgColor,\r\n                                            }}\r\n                                        >\r\n                                            <img\r\n                                                src={option.icon}\r\n                                                alt={option.name}\r\n                                                style={{ width: \"100%\", height: \"100%\" }}\r\n                                            />\r\n                                        </div>\r\n                                        <span\r\n                                            className=\"text-secondary fw-lighter\"\r\n                                            style={{ fontSize: \"12px\" }}\r\n                                        >\r\n                                            {option.name}\r\n                                        </span>\r\n                                    </button>\r\n                                )}\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                </div>\r\n\r\n                <Toast\r\n                    show={showPopup}\r\n                    onClose={() => setShowPopup(false)}\r\n                    delay={2000}\r\n                    autohide\r\n                    style={{\r\n                        position: \"fixed\",\r\n                        bottom: \"10px\",\r\n                        left: \"50%\",\r\n                        transform: \"translateX(-50%)\",\r\n                        backgroundColor: \"#fff\",\r\n                        padding: \"3px\",\r\n                        borderRadius: \"5px\",\r\n                        zIndex: \"1000\",\r\n                    }}\r\n                >\r\n                    <ToastBody>{popupMessage}</ToastBody>\r\n                </Toast>\r\n            </Offcanvas>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Share;","import { useEffect, useState } from \"react\";\r\n\r\nconst InterstitialAd = ({ onAdComplete, onAdError, onAdClose }) => {\r\n  const [adClosed, setAdClosed] = useState(false);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      // This will push the ad to the adsbygoogle array, ensuring it loads\r\n      (window.adsbygoogle = window.adsbygoogle || []).push({});\r\n      \r\n      // Simulating successful ad load completion (you would replace this with actual logic)\r\n      setTimeout(() => {\r\n        if (onAdComplete) onAdComplete(); // Trigger onAdComplete after the ad is shown\r\n      }, 3000); // assuming the ad takes 3 seconds to complete\r\n    } catch (e) {\r\n      console.error(\"Adsense error\", e);\r\n      if (onAdError) onAdError(); // If there is an error loading the ad, trigger onAdError\r\n    }\r\n  }, [onAdComplete, onAdError]);\r\n\r\n  // Function to handle ad close (just for UI simulation)\r\n  const handleCloseAd = () => {\r\n    setAdClosed(true);  // Simulate closing by changing state\r\n    if (onAdClose) onAdClose();  // Trigger onAdClose callback when ad is manually closed\r\n  };\r\n\r\n  if (adClosed) {\r\n    return null;  // Remove the ad UI from the DOM after closing\r\n  }\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <ins\r\n        className=\"adsbygoogle\"\r\n        style={{ display: \"block\" }}\r\n        data-ad-client=\"ca-pub-7719542074975419\"\r\n        data-ad-slot=\"3943700191\"\r\n        data-ad-format=\"auto\"\r\n        data-full-width-responsive=\"true\"\r\n      ></ins>\r\n      {/* Manually Added Close Button */}\r\n      <button\r\n        style={{\r\n          position: \"absolute\", // Positioned on top of the ad\r\n          top: \"10px\",\r\n          right: \"10px\",\r\n          background: \"rgba(0, 0, 0, 0.6)\",\r\n          color: \"#fff\",\r\n          border: \"none\",\r\n          padding: \"5px 10px\",\r\n          cursor: \"pointer\",\r\n        }}\r\n        onClick={handleCloseAd}\r\n      >\r\n        Close\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InterstitialAd;\r\n"],"names":["PrankBtn","playStoreUrl","isAndroid","test","navigator","userAgent","isiOS","_jsx","className","children","_jsxs","Button","style","backgroundColor","width","fontWeight","height","onClick","handlePrankButtonClick","window","open","src","pranklogo","alt","_ref","show","onHide","data2","showPopup","setShowPopup","useState","popupMessage","setPopupMessage","handleCopy","clipboard","writeText","ShareURL","setTimeout","whatsapp","whatsappURL","encodeURIComponent","Name","alert","telegram","telegramURL","handleShare","share","title","text","then","console","log","catch","error","shareOptions","getShareOptions","options","name","icon","bgColor","push","whatsappIcon","telegramIcon","useRWebShare","_Fragment","Offcanvas","placement","borderTopLeftRadius","borderTopRightRadius","borderRadius","Row","map","option","Col","xs","RWebShare","data","url","fontSize","Toast","onClose","delay","autohide","position","bottom","left","transform","padding","zIndex","ToastBody","onAdComplete","onAdError","onAdClose","adClosed","setAdClosed","useEffect","adsbygoogle","e","display","top","right","background","color","border","cursor","handleCloseAd"],"sourceRoot":""}